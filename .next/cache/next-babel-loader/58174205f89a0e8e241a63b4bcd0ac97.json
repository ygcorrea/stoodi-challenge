{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/home/yas/dev/stoodi-challenge/components/answerFeedback.js\";\n\nvar __jsx = React.createElement;\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex: 1;\\n  justify-content: flex-end;\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex: 1;\\n  align-items: center;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  display: inline-block;\\n  padding: 10px 30px;\\n  border: 1px solid transparent;\\n  border-radius: 40px;\\n  width: 220px;\\n  font-size: 1rem;\\n  font: inherit;\\n  font-weight: 700;\\n  color: #fff;\\n  text-transform: uppercase;\\n  text-align: center;\\n  cursor: pointer;\\n  overflow: hidden;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  span {\\n    font-weight: 700;\\n  }\\n  padding: 20px;\\n  line-height: 0.4em;\\n  align-items: center;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect } from \"react\";\nimport { Grid, Button, Box } from \"@material-ui/core\";\nimport styled from \"styled-components\";\nvar AnswerGrid = styled(Grid)(_templateObject());\nvar StyledButton = styled.button(_templateObject2());\nvar StyledBox = styled(Box)(_templateObject3());\nvar ButtonContainer = styled(Grid)(_templateObject4());\n\nvar AnswerFeedback = function AnswerFeedback(_ref) {\n  var curValue = _ref.curValue,\n      setResult = _ref.setResult,\n      result = _ref.result,\n      exercise = _ref.exercise,\n      onReset = _ref.onReset;\n\n  var _useState = useState(false),\n      sended = _useState[0],\n      setSended = _useState[1];\n\n  var onClickValidateButton = function onClickValidateButton() {\n    if (curValue === undefined) return;\n    var exec = {\n      choice: curValue,\n      exercise_id: exercise.exercise_id\n    };\n    fetch(\"https://8zqqb4wng6.execute-api.us-east-1.amazonaws.com/dev/\", {\n      method: \"POST\",\n      body: JSON.stringify(exec)\n    }).then(function (res) {\n      return res.json();\n    }).then(function (result) {\n      setResult(result.is_correct);\n      setSended(true);\n    });\n  };\n\n  var feedbackStyles = {};\n  var buttonStyles = {\n    backgroundColor: \"#3153f5\"\n  };\n  if (curValue === undefined || curValue === null) buttonStyles.backgroundColor = \"#dedede\";\n  if (result) feedbackStyles.backgroundColor = \"#D4EFE4\";\n  if (!result && result !== null) feedbackStyles.backgroundColor = \"#FEE0D9\";\n  return __jsx(StyledBox, {\n    style: feedbackStyles,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, result && __jsx(AnswerGrid, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, \"Resposta correta\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, \"Boa! Acertou em cheio.\")), !result && result !== null && __jsx(AnswerGrid, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, \"Resposta incorreta\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, \"Que tal tentar novamente?\")), __jsx(ButtonContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, !sended && sended !== null && __jsx(StyledButton, {\n    style: buttonStyles,\n    disabled: curValue === undefined || curValue === null,\n    onClick: onClickValidateButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, \"Verificar Resposta\"), sended && __jsx(StyledButton, {\n    style: buttonStyles,\n    disabled: curValue === undefined || curValue === null,\n    onClick: function onClick() {\n      onReset();\n      setSended(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, result ? \"PRÃ“XIMA\" : \"REFAZER\")));\n};\n\nexport default AnswerFeedback;","map":{"version":3,"sources":["/home/yas/dev/stoodi-challenge/components/answerFeedback.js"],"names":["React","useState","useEffect","Grid","Button","Box","styled","AnswerGrid","StyledButton","button","StyledBox","ButtonContainer","AnswerFeedback","curValue","setResult","result","exercise","onReset","sended","setSended","onClickValidateButton","undefined","exec","choice","exercise_id","fetch","method","body","JSON","stringify","then","res","json","is_correct","feedbackStyles","buttonStyles","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Grid, Button, Box } from \"@material-ui/core\";\nimport styled from \"styled-components\";\n\nconst AnswerGrid = styled(Grid)`\n  span {\n    font-weight: 700;\n  }\n  padding: 20px;\n  line-height: 0.4em;\n  align-items: center;\n`;\n\nconst StyledButton = styled.button`\n  display: inline-block;\n  padding: 10px 30px;\n  border: 1px solid transparent;\n  border-radius: 40px;\n  width: 220px;\n  font-size: 1rem;\n  font: inherit;\n  font-weight: 700;\n  color: #fff;\n  text-transform: uppercase;\n  text-align: center;\n  cursor: pointer;\n  overflow: hidden;\n`;\n\nconst StyledBox = styled(Box)`\n  display: flex;\n  flex: 1;\n  align-items: center;\n`;\n\nconst ButtonContainer = styled(Grid)`\n  display: flex;\n  flex: 1;\n  justify-content: flex-end;\n`;\n\nconst AnswerFeedback = ({ curValue, setResult, result, exercise, onReset }) => {\n  const [sended, setSended] = useState(false);\n\n  const onClickValidateButton = () => {\n    if (curValue === undefined) return;\n    const exec = {\n      choice: curValue,\n      exercise_id: exercise.exercise_id,\n    };\n    fetch(\"https://8zqqb4wng6.execute-api.us-east-1.amazonaws.com/dev/\", {\n      method: \"POST\",\n      body: JSON.stringify(exec),\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        setResult(result.is_correct);\n        setSended(true);\n      });\n  };\n  const feedbackStyles = {};\n\n  const buttonStyles = {\n    backgroundColor: \"#3153f5\",\n  };\n\n  if (curValue === undefined || curValue === null)\n    buttonStyles.backgroundColor = \"#dedede\";\n\n  if (result) feedbackStyles.backgroundColor = \"#D4EFE4\";\n  if (!result && result !== null) feedbackStyles.backgroundColor = \"#FEE0D9\";\n\n  return (\n    <StyledBox style={feedbackStyles}>\n      {result && (\n        <AnswerGrid>\n          <span>Resposta correta</span>\n          <p>Boa! Acertou em cheio.</p>\n        </AnswerGrid>\n      )}\n      {!result && result !== null && (\n        <AnswerGrid>\n          <span>Resposta incorreta</span>\n          <p>Que tal tentar novamente?</p>\n        </AnswerGrid>\n      )}\n      <ButtonContainer>\n        {!sended && sended !== null && (\n          <StyledButton\n            style={buttonStyles}\n            disabled={curValue === undefined || curValue === null}\n            onClick={onClickValidateButton}\n          >\n            Verificar Resposta\n          </StyledButton>\n        )}\n\n        {sended && (\n          <StyledButton\n            style={buttonStyles}\n            disabled={curValue === undefined || curValue === null}\n            onClick={() => {\n              onReset();\n              setSended(false);\n            }}\n          >\n            {result ? \"PRÃ“XIMA\" : \"REFAZER\"}\n          </StyledButton>\n        )}\n      </ButtonContainer>\n    </StyledBox>\n  );\n};\nexport default AnswerFeedback;\n"]},"metadata":{},"sourceType":"module"}