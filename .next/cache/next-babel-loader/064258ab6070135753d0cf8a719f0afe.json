{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/home/yas/dev/stoodi-challenge/components/radioOptions.js\";\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nvar RadioOptions = function RadioOptions(_ref) {\n  var _ref$alternatives = _ref.alternatives,\n      alternatives = _ref$alternatives === void 0 ? [] : _ref$alternatives,\n      setValue = _ref.setValue,\n      value = _ref.value,\n      result = _ref.result;\n\n  var handleChange = function handleChange(event) {\n    setValue(event.target.value);\n  };\n\n  var styles = {\n    display: \"flex\",\n    widht: \"90%\"\n  };\n  return __jsx(FormControl, {\n    style: styles,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, __jsx(RadioGroup, {\n    \"aria-label\": \"alternatives\",\n    name: \"alternatives\",\n    onChange: handleChange,\n    style: styles,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, alternatives.map(function (_ref2) {\n    var letter = _ref2.letter,\n        label = _ref2.label;\n\n    var alternativeStyles = _objectSpread({}, styles);\n\n    if (value === letter && result) alternativeStyles.backgroundColor = \"#D4EFE4\";\n    if (value === letter && !result && result !== null) alternativeStyles.backgroundColor = \"#FEE0D9\";\n    return __jsx(FormControlLabel, {\n      disabled: result !== null,\n      value: \"\".concat(letter),\n      control: __jsx(Radio, {\n        color: \"primary\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 24\n        }\n      }),\n      label: \"\".concat(letter, \". \").concat(label),\n      style: alternativeStyles,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    });\n  })));\n};\n\nexport default RadioOptions;","map":{"version":3,"sources":["/home/yas/dev/stoodi-challenge/components/radioOptions.js"],"names":["React","useState","useEffect","Radio","RadioGroup","FormControlLabel","FormControl","RadioOptions","alternatives","setValue","value","result","handleChange","event","target","styles","display","widht","map","letter","label","alternativeStyles","backgroundColor"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAoD;AAAA,+BAAjDC,YAAiD;AAAA,MAAjDA,YAAiD,kCAAlC,EAAkC;AAAA,MAA9BC,QAA8B,QAA9BA,QAA8B;AAAA,MAApBC,KAAoB,QAApBA,KAAoB;AAAA,MAAbC,MAAa,QAAbA,MAAa;;AACvE,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,KAAK,EAAI;AAC5BJ,IAAAA,QAAQ,CAACI,KAAK,CAACC,MAAN,CAAaJ,KAAd,CAAR;AACD,GAFD;;AAGA,MAAMK,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE,MADI;AAEbC,IAAAA,KAAK,EAAC;AAFO,GAAf;AAIA,SACE,MAAC,WAAD;AAAa,IAAA,KAAK,EAAEF,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AACE,kBAAW,cADb;AAEE,IAAA,IAAI,EAAC,cAFP;AAGE,IAAA,QAAQ,EAAEH,YAHZ;AAIE,IAAA,KAAK,EAAEG,MAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGP,YAAY,CAACU,GAAb,CAAiB,iBAAuB;AAAA,QAApBC,MAAoB,SAApBA,MAAoB;AAAA,QAAZC,KAAY,SAAZA,KAAY;;AACvC,QAAMC,iBAAiB,qBAAQN,MAAR,CAAvB;;AAEA,QAAIL,KAAK,KAAKS,MAAV,IAAoBR,MAAxB,EAAgCU,iBAAiB,CAACC,eAAlB,GAAoC,SAApC;AAChC,QAAIZ,KAAK,KAAKS,MAAV,IAAoB,CAACR,MAArB,IAA+BA,MAAM,KAAK,IAA9C,EAAoDU,iBAAiB,CAACC,eAAlB,GAAoC,SAApC;AACpD,WACE,MAAC,gBAAD;AACE,MAAA,QAAQ,EAAEX,MAAM,KAAK,IADvB;AAEE,MAAA,KAAK,YAAKQ,MAAL,CAFP;AAGE,MAAA,OAAO,EAAE,MAAC,KAAD;AAAO,QAAA,KAAK,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHX;AAIE,MAAA,KAAK,YAAKA,MAAL,eAAgBC,KAAhB,CAJP;AAKE,MAAA,KAAK,EAAEC,iBALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AASD,GAdA,CANH,CADF,CADF;AA0BD,CAlCD;;AAmCA,eAAed,YAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nconst RadioOptions = ({ alternatives = [], setValue, value, result }) => {\n  const handleChange = event => {\n    setValue(event.target.value);\n  };\n  const styles = {\n    display: \"flex\",\n    widht:\"90%\"\n  };\n  return (\n    <FormControl style={styles}>\n      <RadioGroup\n        aria-label=\"alternatives\"\n        name=\"alternatives\"\n        onChange={handleChange}\n        style={styles}\n      >\n        {alternatives.map(({ letter, label }) => {\n          const alternativeStyles = { ...styles };\n\n          if (value === letter && result) alternativeStyles.backgroundColor = \"#D4EFE4\";\n          if (value === letter && !result && result !== null) alternativeStyles.backgroundColor = \"#FEE0D9\";\n          return (\n            <FormControlLabel\n              disabled={result !== null}\n              value={`${letter}`}\n              control={<Radio color=\"primary\" />}\n              label={`${letter}. ${label}`}\n              style={alternativeStyles}\n            />\n          );\n        })}\n      </RadioGroup>\n    </FormControl>\n  );\n};\nexport default RadioOptions;\n"]},"metadata":{},"sourceType":"module"}